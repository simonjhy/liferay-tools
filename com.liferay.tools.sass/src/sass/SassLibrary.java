package sass;
import com.ochafik.lang.jnaerator.runtime.LibraryExtractor;
import com.ochafik.lang.jnaerator.runtime.MangledFunctionMapper;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
/**
 * JNA Wrapper for library <b>sass</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface SassLibrary extends Library {
	public static final String JNA_LIBRARY_NAME = LibraryExtractor.getLibraryPath("sass", true, SassLibrary.class);
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(SassLibrary.JNA_LIBRARY_NAME, MangledFunctionMapper.DEFAULT_OPTIONS);
	public static final SassLibrary INSTANCE = (SassLibrary)Native.loadLibrary(SassLibrary.JNA_LIBRARY_NAME, SassLibrary.class, MangledFunctionMapper.DEFAULT_OPTIONS);
	/** <i>native declaration : /usr/include/c++/4.8.2/tr1/stdbool.h</i> */
	public static final int _TR1_STDBOOL_H = (int)1;
	public static final int SASS_STYLE_EXPANDED = (int)1;
	/** <i>native declaration : /usr/include/c++/4.8.2/tr1/cstdbool</i> */
	public static final int _GLIBCXX_TR1_CSTDBOOL = (int)1;
	public static final int SASS_STYLE_NESTED = (int)0;
	public static final int SASS_STYLE_COMPACT = (int)2;
	public static final int SASS_STYLE_COMPRESSED = (int)3;
	/**
	 * Original signature : <code>sass_context* sass_new_context()</code><br>
	 * <i>native declaration : /usr/include/c++/4.8.2/tr1/stdbool.h:92</i>
	 */
	sass_context sass_new_context();
	/**
	 * Original signature : <code>sass_file_context* sass_new_file_context()</code><br>
	 * <i>native declaration : /usr/include/c++/4.8.2/tr1/stdbool.h:93</i>
	 */
	sass_file_context sass_new_file_context();
	/**
	 * Original signature : <code>sass_folder_context* sass_new_folder_context()</code><br>
	 * <i>native declaration : /usr/include/c++/4.8.2/tr1/stdbool.h:94</i>
	 */
	sass_folder_context sass_new_folder_context();
	/**
	 * Original signature : <code>void sass_free_context(sass_context*)</code><br>
	 * <i>native declaration : /usr/include/c++/4.8.2/tr1/stdbool.h:96</i>
	 */
	void sass_free_context(sass_context ctx);
	/**
	 * Original signature : <code>void sass_free_file_context(sass_file_context*)</code><br>
	 * <i>native declaration : /usr/include/c++/4.8.2/tr1/stdbool.h:97</i>
	 */
	void sass_free_file_context(sass_file_context ctx);
	/**
	 * Original signature : <code>void sass_free_folder_context(sass_folder_context*)</code><br>
	 * <i>native declaration : /usr/include/c++/4.8.2/tr1/stdbool.h:98</i>
	 */
	void sass_free_folder_context(sass_folder_context ctx);
	/**
	 * Original signature : <code>int sass_compile(sass_context*)</code><br>
	 * <i>native declaration : /usr/include/c++/4.8.2/tr1/stdbool.h:100</i>
	 */
	int sass_compile(sass_context ctx);
	/**
	 * Original signature : <code>int sass_compile_file(sass_file_context*)</code><br>
	 * <i>native declaration : /usr/include/c++/4.8.2/tr1/stdbool.h:101</i>
	 */
	int sass_compile_file(sass_file_context ctx);
	/**
	 * Original signature : <code>int sass_compile_folder(sass_folder_context*)</code><br>
	 * <i>native declaration : /usr/include/c++/4.8.2/tr1/stdbool.h:102</i>
	 */
	int sass_compile_folder(sass_folder_context ctx);
	/**
	 * Original signature : <code>char* quote(const char*, const char)</code><br>
	 * <i>native declaration : /usr/include/c++/4.8.2/tr1/stdbool.h:104</i><br>
	 * @deprecated use the safer methods {@link #quote(java.lang.String, byte)} and {@link #quote(com.sun.jna.Pointer, byte)} instead
	 */
	@Deprecated 
	Pointer quote(Pointer str, byte quotemark);
	/**
	 * Original signature : <code>char* quote(const char*, const char)</code><br>
	 * <i>native declaration : /usr/include/c++/4.8.2/tr1/stdbool.h:104</i>
	 */
	Pointer quote(String str, byte quotemark);
	/**
	 * Original signature : <code>char* unquote(const char*)</code><br>
	 * <i>native declaration : /usr/include/c++/4.8.2/tr1/stdbool.h:105</i><br>
	 * @deprecated use the safer methods {@link #unquote(java.lang.String)} and {@link #unquote(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer unquote(Pointer str);
	/**
	 * Original signature : <code>char* unquote(const char*)</code><br>
	 * <i>native declaration : /usr/include/c++/4.8.2/tr1/stdbool.h:105</i>
	 */
	Pointer unquote(String str);
	public static class Sass_C_Function_Descriptor extends PointerType {
		public Sass_C_Function_Descriptor(Pointer address) {
			super(address);
		}
		public Sass_C_Function_Descriptor() {
			super();
		}
	};
}
