package sass;
import java.util.Arrays;
import java.util.List;

import sass.SassLibrary.Sass_C_Function_Descriptor;

import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.Pointer;
import com.sun.jna.ptr.PointerByReference;
/**
 * <i>native declaration : /usr/include/c++/4.8.2/tr1/stdbool.h:68</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class sass_file_context extends Structure<sass_file_context, sass_file_context.ByValue, sass_file_context.ByReference > {
	/** C type : const char* */
	public Pointer input_path;
	/** C type : const char* */
	public Pointer output_path;
	/** C type : char* */
	public Pointer output_string;
	/** C type : char* */
	public Pointer source_map_string;
	/** C type : sass_options */
	public sass_options options;
	public int error_status;
	/** C type : char* */
	public Pointer error_message;
	/** C type : Sass_C_Function_Descriptor* */
	public Sass_C_Function_Descriptor c_functions;
	/** C type : char** */
	public PointerByReference included_files;
	public int num_included_files;
	public sass_file_context() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("input_path", "output_path", "output_string", "source_map_string", "options", "error_status", "error_message", "c_functions", "included_files", "num_included_files");
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected sass_file_context newInstance() { return new sass_file_context(); }
	public static sass_file_context[] newArray(int arrayLength) {
		return Structure.newArray(sass_file_context.class, arrayLength);
	}
	public static class ByReference extends sass_file_context implements Structure.ByReference {

	};
	public static class ByValue extends sass_file_context implements Structure.ByValue {

	};
}
