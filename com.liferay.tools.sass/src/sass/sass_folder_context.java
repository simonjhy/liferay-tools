package sass;
import java.util.Arrays;
import java.util.List;

import sass.SassLibrary.Sass_C_Function_Descriptor;

import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.Pointer;
import com.sun.jna.ptr.PointerByReference;
/**
 * <i>native declaration : /usr/include/c++/4.8.2/tr1/stdbool.h:81</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class sass_folder_context extends Structure<sass_folder_context, sass_folder_context.ByValue, sass_folder_context.ByReference > {
	/** C type : const char* */
	public Pointer search_path;
	/** C type : const char* */
	public Pointer output_path;
	/** C type : sass_options */
	public sass_options options;
	public int error_status;
	/** C type : char* */
	public Pointer error_message;
	/** C type : Sass_C_Function_Descriptor* */
	public Sass_C_Function_Descriptor c_functions;
	/** C type : char** */
	public PointerByReference included_files;
	public int num_included_files;
	public sass_folder_context() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("search_path", "output_path", "options", "error_status", "error_message", "c_functions", "included_files", "num_included_files");
	}
	/**
	 * @param search_path C type : const char*<br>
	 * @param output_path C type : const char*<br>
	 * @param options C type : sass_options<br>
	 * @param error_message C type : char*<br>
	 * @param c_functions C type : Sass_C_Function_Descriptor*<br>
	 * @param included_files C type : char**
	 */
	public sass_folder_context(Pointer search_path, Pointer output_path, sass_options options, int error_status, Pointer error_message, Sass_C_Function_Descriptor c_functions, PointerByReference included_files, int num_included_files) {
		super();
		this.search_path = search_path;
		this.output_path = output_path;
		this.options = options;
		this.error_status = error_status;
		this.error_message = error_message;
		this.c_functions = c_functions;
		this.included_files = included_files;
		this.num_included_files = num_included_files;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected sass_folder_context newInstance() { return new sass_folder_context(); }
	public static sass_folder_context[] newArray(int arrayLength) {
		return Structure.newArray(sass_folder_context.class, arrayLength);
	}
	public static class ByReference extends sass_folder_context implements Structure.ByReference {

	};
	public static class ByValue extends sass_folder_context implements Structure.ByValue {

	};
}
